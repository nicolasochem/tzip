{ parameter
    (or (pair %inspect_op
           (contract %callback
              (pair (bool %is_operator)
                    (pair %operator
                       (pair (address %operator) (address %owner))
                       (or %tokens (unit %all_tokens) (set %some_tokens nat)))))
           (pair %operator
              (pair (address %operator) (address %owner))
              (or %tokens (unit %all_tokens) (set %some_tokens nat))))
        (list %update_ops
           (or (pair %add_operator
                  (pair (address %operator) (address %owner))
                  (or %tokens (unit %all_tokens) (set %some_tokens nat)))
               (pair %remove_operator
                  (pair (address %operator) (address %owner))
                  (or %tokens (unit %all_tokens) (set %some_tokens nat)))))) ;
  storage
    (big_map
       (pair address address)
       (or (or (unit %all_operator_tokens) (set %all_operator_tokens_except nat))
           (set %some_operator_tokens nat))) ;
  code { DUP ;
         DUP ;
         CDR ;
         DIP { DUP } ;
         SWAP ;
         CAR ;
         IF_LEFT
           { DUP ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DUP ;
             CAR ;
             DUP ;
             CDR ;
             DIP { DIP { DUP } ; SWAP ; CDR } ;
             PAIR ;
             DUP ;
             CAR ;
             DUP ;
             CAR ;
             CDR ;
             DIP { DUP ; CAR ; CAR } ;
             PAIR ;
             DIP { DIP { DUP } ; SWAP ; CDR } ;
             GET ;
             IF_NONE
               { PUSH bool False }
               { DUP ;
                 DIP { DIP { DUP } ; SWAP ; CDR } ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIP { DUP } ;
                 SWAP ;
                 CAR ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DROP ; PUSH bool True }
                       { DIP 2 { DUP } ;
                         DIG 2 ;
                         IF_LEFT
                           { DROP ; PUSH bool False }
                           { DUP ;
                             PUSH bool True ;
                             SWAP ;
                             ITER { SWAP ;
                                    PAIR ;
                                    DUP ;
                                    DUP ;
                                    CDR ;
                                    DIP { DIP 3 { DUP } ; DIG 3 } ;
                                    MEM ;
                                    IF { PUSH bool False } { DUP ; CAR } ;
                                    DIP { DROP 2 } } ;
                             DIP { DROP } } ;
                         DIP { DROP } } ;
                     DIP { DROP } }
                   { DIP { DUP } ;
                     SWAP ;
                     IF_LEFT
                       { DROP ; PUSH bool False }
                       { DUP ;
                         PUSH bool True ;
                         SWAP ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                DUP ;
                                CDR ;
                                DIP { DIP 3 { DUP } ; DIG 3 } ;
                                MEM ;
                                IF { DUP ; CAR } { PUSH bool False } ;
                                DIP { DROP 2 } } ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP 3 } } ;
             DIP { DROP 2 } ;
             DUP ;
             DIP { DIP { DUP } ; SWAP ; CDR } ;
             PAIR ;
             DIP { DIP { DUP } ; SWAP ; CAR ; PUSH mutez 0 } ;
             TRANSFER_TOKENS ;
             DIP { DROP 3 } ;
             DUP ;
             NIL operation ;
             SWAP ;
             CONS ;
             DIP { DIP 2 { DUP } ; DIG 2 } ;
             PAIR ;
             DIP { DROP 2 } }
           { DUP ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DUP ;
             CAR ;
             DIP { DUP ; CDR } ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    DUP ;
                    CAR ;
                    DIP { DUP } ;
                    SWAP ;
                    CDR ;
                    IF_LEFT
                      { DUP ;
                        DIP { DIP { DUP } ; SWAP } ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        DIP { DUP } ;
                        SWAP ;
                        CDR ;
                        DIP { DUP } ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        DIP { DIP { DUP } ; SWAP ; CAR ; CAR } ;
                        PAIR ;
                        DIP 2 { DUP } ;
                        DIG 2 ;
                        CDR ;
                        IF_LEFT
                          { PUSH unit Unit ; LEFT (set nat) ; LEFT (set nat) ; DIP { DROP } }
                          { DIP { DUP } ;
                            SWAP ;
                            DIP { DIP 2 { DUP } ; DIG 2 } ;
                            GET ;
                            DIP { DUP } ;
                            PAIR ;
                            DUP ;
                            CDR ;
                            DIP { DUP } ;
                            SWAP ;
                            CAR ;
                            IF_NONE
                              { DUP ; RIGHT (or unit (set nat)) }
                              { DUP ;
                                IF_LEFT
                                  { DUP ;
                                    IF_LEFT
                                      { PUSH unit Unit ; LEFT (set nat) ; LEFT (set nat) ; DIP { DROP } }
                                      { DIP 3 { DUP } ;
                                        DIG 3 ;
                                        DIP { DUP } ;
                                        ITER { SWAP ;
                                               PAIR ;
                                               DUP ;
                                               DUP ;
                                               CDR ;
                                               DIP { DUP ; CAR ; PUSH bool False } ;
                                               UPDATE ;
                                               DIP { DROP 2 } } ;
                                        DUP ;
                                        SIZE ;
                                        PUSH nat 0 ;
                                        SWAP ;
                                        COMPARE ;
                                        EQ ;
                                        IF { PUSH unit Unit ; LEFT (set nat) ; LEFT (set nat) }
                                           { DUP ; RIGHT unit ; LEFT (set nat) } ;
                                        DIP { DROP 2 } } ;
                                    DIP { DROP } }
                                  { DIP 2 { DUP } ;
                                    DIG 2 ;
                                    DIP { DUP } ;
                                    ITER { SWAP ;
                                           PAIR ;
                                           DUP ;
                                           DUP ;
                                           CDR ;
                                           DIP { DUP ; CAR ; PUSH bool True } ;
                                           UPDATE ;
                                           DIP { DROP 2 } } ;
                                    DUP ;
                                    RIGHT (or unit (set nat)) ;
                                    DIP { DROP 2 } } ;
                                DIP { DROP } } ;
                            DIP { DROP 3 } } ;
                        DIP { DUP } ;
                        SWAP ;
                        DIP { DUP ; SOME ; DIP { DIP 2 { DUP } ; DIG 2 } } ;
                        UPDATE ;
                        DIP { DROP 6 } }
                      { DUP ;
                        DIP { DIP { DUP } ; SWAP } ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        DIP { DUP } ;
                        SWAP ;
                        CDR ;
                        DIP { DUP } ;
                        SWAP ;
                        CDR ;
                        IF_LEFT
                          { DIP { DUP } ; SWAP ; DIP { DROP } }
                          { DIP 2 { DUP } ;
                            DIG 2 ;
                            CAR ;
                            CDR ;
                            DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; CAR } ;
                            PAIR ;
                            DUP ;
                            DIP { DIP 2 { DUP } ; DIG 2 } ;
                            GET ;
                            DIP { DIP { DUP } ; SWAP } ;
                            PAIR ;
                            DUP ;
                            CDR ;
                            DIP { DUP } ;
                            SWAP ;
                            CAR ;
                            IF_NONE
                              { NONE (or (or (unit %all_operator_tokens) (set %all_operator_tokens_except nat))
                                         (set %some_operator_tokens nat)) }
                              { DUP ;
                                IF_LEFT
                                  { DUP ;
                                    IF_LEFT
                                      { DIP 3 { DUP } ;
                                        DIG 3 ;
                                        RIGHT unit ;
                                        LEFT (set nat) ;
                                        SOME ;
                                        DIP { DROP } }
                                      { DIP 3 { DUP } ;
                                        DIG 3 ;
                                        DIP { DUP } ;
                                        ITER { SWAP ;
                                               PAIR ;
                                               DUP ;
                                               DUP ;
                                               CDR ;
                                               DIP { DUP ; CAR ; PUSH bool True } ;
                                               UPDATE ;
                                               DIP { DROP 2 } } ;
                                        DUP ;
                                        RIGHT unit ;
                                        LEFT (set nat) ;
                                        SOME ;
                                        DIP { DROP 2 } } ;
                                    DIP { DROP } }
                                  { DIP 2 { DUP } ;
                                    DIG 2 ;
                                    DIP { DUP } ;
                                    ITER { SWAP ;
                                           PAIR ;
                                           DUP ;
                                           DUP ;
                                           CDR ;
                                           DIP { DUP ; CAR ; PUSH bool False } ;
                                           UPDATE ;
                                           DIP { DROP 2 } } ;
                                    DUP ;
                                    SIZE ;
                                    PUSH nat 0 ;
                                    SWAP ;
                                    COMPARE ;
                                    EQ ;
                                    IF { NONE (or (or (unit %all_operator_tokens) (set %all_operator_tokens_except nat))
                                                  (set %some_operator_tokens nat)) }
                                       { DUP ; RIGHT (or unit (set nat)) ; SOME } ;
                                    DIP { DROP 2 } } ;
                                DIP { DROP } } ;
                            DIP { DROP 2 ; DUP } ;
                            SWAP ;
                            DIP { DUP ; DIP { DIP 3 { DUP } ; DIG 3 } } ;
                            UPDATE ;
                            DIP { DROP 3 } } ;
                        DIP { DROP 4 } } ;
                    DIP { DROP 3 } } ;
             DIP { DROP } ;
             DUP ;
             NIL operation ;
             PAIR ;
             DIP { DROP 2 } } ;
         DIP { DROP 3 } } }


# This contract was generated from
# https://gitlab.com/morley-framework/morley/blob/08c80b441e5a2d0117d34279e5124485765a14ff/lorentz-contracts/src/Lorentz/Contracts/AbstractLedger.hs

parameter (or (pair %transfer address
                              (pair address
                                    nat))
              (or (pair %getTotalSupply unit
                                        (contract nat))
                  (pair %getBalance address
                                    (contract nat))));
storage (pair (big_map address
                       nat)
              nat);
code { DUP;
       CAR;
       DIP { CDR };
       IF_LEFT { DUP;
                 CAR;
                 SENDER;
                 COMPARE;
                 EQ;
                 IF {  }
                    { PUSH string "Sender is not equal to \"from\"";
                      FAILWITH };
                 DIP { DUP;
                       CAR;
                       SENDER;
                       GET;
                       IF_NONE { PUSH string "Sender address is not in ledger";
                                 FAILWITH }
                               {  } };
                 SWAP;
                 DIP { DUP;
                       CDR;
                       CDR };
                 SUB;
                 DUP;
                 GE;
                 IF {  }
                    { PUSH string "Transferred value is greater than balance";
                      FAILWITH };
                 DUP;
                 EQ;
                 IF { DROP;
                      NONE nat }
                    { ISNAT };
                 SWAP;
                 DIP { DIP { DUP;
                             CAR };
                       SENDER;
                       UPDATE;
                       DIP { DUP;
                             DIP { CDR };
                             CAR };
                       DIP { DROP };
                       PAIR };
                 DUP;
                 CDR;
                 CAR;
                 SWAP;
                 DIP { DIP { DUP;
                             CAR };
                       GET };
                 SWAP;
                 IF_NONE { DUP;
                           CDR;
                           CDR }
                         { DIP { DUP;
                                 CDR;
                                 CDR };
                           ADD };
                 SOME;
                 DIP { CDR;
                       CAR };
                 SWAP;
                 DIP { DIP { DUP;
                             CAR } };
                 UPDATE;
                 DIP { DUP;
                       DIP { CDR };
                       CAR };
                 DIP { DROP };
                 PAIR;
                 NIL operation;
                 PAIR }
               { IF_LEFT { DUP;
                           CAR;
                           DIP { CDR };
                           DIP { DIP { DUP };
                                 SWAP };
                           PAIR;
                           CDR;
                           CDR;
                           DIP { AMOUNT };
                           TRANSFER_TOKENS;
                           NIL operation;
                           SWAP;
                           CONS;
                           PAIR }
                         { DUP;
                           CAR;
                           DIP { CDR };
                           DIP { DIP { DUP };
                                 SWAP };
                           PAIR;
                           DUP;
                           CAR;
                           DIP { CDR };
                           DIP { CAR };
                           GET;
                           IF_NONE { PUSH nat 0 }
                                   {  };
                           DIP { AMOUNT };
                           TRANSFER_TOKENS;
                           NIL operation;
                           SWAP;
                           CONS;
                           PAIR } } };
